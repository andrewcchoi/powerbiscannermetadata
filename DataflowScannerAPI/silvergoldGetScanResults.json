{"name":"silvergoldGetScanResults","description":"","version":"1.0","culture":"en-US","modifiedTime":"2022-12-02T14:21:40.6221191+00:00","ppdf:outputFileFormat":"Csv","pbi:mashup":{"fastCombine":true,"allowNativeQueries":false,"queriesMetadata":{"scanResultID":{"queryId":"2cb90aed-45ac-4e24-a5ef-9c0cfe0ada2d","queryName":"scanResultID","queryGroupId":"3f55dbbf-37df-4123-b6ec-da64aa6c5e89"},"client_id":{"queryId":"5e970161-dbf6-4df0-aa88-a3a8f64852bf","queryName":"client_id","queryGroupId":"3f55dbbf-37df-4123-b6ec-da64aa6c5e89"},"client_secret":{"queryId":"721f35a2-86fb-4dd2-aac0-53b2ff7bb8cf","queryName":"client_secret","queryGroupId":"3f55dbbf-37df-4123-b6ec-da64aa6c5e89"},"tenant_id":{"queryId":"7ea18a7f-5a7f-405b-9420-f3e778d633d2","queryName":"tenant_id","queryGroupId":"3f55dbbf-37df-4123-b6ec-da64aa6c5e89"},"GetToken":{"queryId":"e52c61b2-3137-43b6-899a-b779758c0cb4","queryName":"GetToken","queryGroupId":"3f55dbbf-37df-4123-b6ec-da64aa6c5e89"},"Result":{"queryId":"5fd441f4-a833-4449-9457-534fd771081c","queryName":"Result","queryGroupId":"61368091-b3a0-4562-8b9b-939daf744724"},"ws":{"queryId":"c2f9b765-51e0-45a1-afcc-37d8af8c1251","queryName":"ws","queryGroupId":"61368091-b3a0-4562-8b9b-939daf744724"},"datasourceinstancebr":{"queryId":"072d3926-95a5-4836-850b-55d0e0a4853d","queryName":"datasourceinstancebr","queryGroupId":"94cf3fc6-5426-418b-af13-af4b2d4a191c","loadEnabled":true},"workspaces":{"queryId":"3de79d38-b5e3-442b-90f6-cbc717a5a85b","queryName":"workspaces","queryGroupId":"94cf3fc6-5426-418b-af13-af4b2d4a191c","loadEnabled":true},"datasetsload":{"queryId":"d6af4c53-6cb2-474e-ba14-5b7255ae10ad","queryName":"datasetsload","queryGroupId":"32befba1-8726-486c-96b9-416b22e3c199"},"datasets":{"queryId":"e3df6cad-b24b-4e1f-8068-6447e8fcc614","queryName":"datasets","queryGroupId":"94cf3fc6-5426-418b-af13-af4b2d4a191c","loadEnabled":true},"columnmeasures":{"queryId":"91043a89-b2da-4630-8d3d-7fa8730e3c82","queryName":"columnmeasures","queryGroupId":"94cf3fc6-5426-418b-af13-af4b2d4a191c","loadEnabled":true},"datasetdatasource":{"queryId":"3c0f834f-73af-4f61-b77e-d3713dec2a98","queryName":"datasetdatasource","queryGroupId":"94cf3fc6-5426-418b-af13-af4b2d4a191c","loadEnabled":true},"datasetusers":{"queryId":"2cd84931-2cfb-412b-be40-581d6cfc0fbc","queryName":"datasetusers","queryGroupId":"94cf3fc6-5426-418b-af13-af4b2d4a191c","loadEnabled":true},"reports":{"queryId":"4df8bdcc-8c53-4691-92e9-0bfea2c7d933","queryName":"reports","queryGroupId":"94cf3fc6-5426-418b-af13-af4b2d4a191c","loadEnabled":true},"users":{"queryId":"0051227c-43de-4bcd-9030-73695b63edce","queryName":"users","queryGroupId":"94cf3fc6-5426-418b-af13-af4b2d4a191c","loadEnabled":true},"datasourceinst":{"queryId":"74521641-57aa-4ae6-b393-b2b20ea781bc","queryName":"datasourceinst","queryGroupId":"94cf3fc6-5426-418b-af13-af4b2d4a191c","loadEnabled":true},"tableload":{"queryId":"0a6e1724-7629-4563-95a9-167c6ec6b1ac","queryName":"tableload","queryGroupId":"32befba1-8726-486c-96b9-416b22e3c199"},"tables":{"queryId":"66fd65e2-a946-47a8-994a-e1091cfb1f99","queryName":"tables","queryGroupId":"94cf3fc6-5426-418b-af13-af4b2d4a191c","loadEnabled":true},"dataflowload":{"queryId":"fe6398f5-331a-4548-8816-bdf5b789a2c5","queryName":"dataflowload","queryGroupId":"32befba1-8726-486c-96b9-416b22e3c199"},"dataflows":{"queryId":"bc591a3e-76e5-4b05-bf36-1de69aea2da8","queryName":"dataflows","queryGroupId":"94cf3fc6-5426-418b-af13-af4b2d4a191c","loadEnabled":true},"dataflowsources":{"queryId":"0ab02744-51c6-491d-a486-7a2742f70afc","queryName":"dataflowsources","queryGroupId":"94cf3fc6-5426-418b-af13-af4b2d4a191c","loadEnabled":true},"datasourcedim":{"queryId":"bfb316ab-3ce9-459f-9e0a-b54eb1dba5f8","queryName":"datasourcedim","queryGroupId":"94cf3fc6-5426-418b-af13-af4b2d4a191c","loadEnabled":true},"columns":{"queryId":"70580956-aa14-4ad2-8de5-f7d5838dbdb9","queryName":"columns","queryGroupId":"32befba1-8726-486c-96b9-416b22e3c199"},"measurefield":{"queryId":"3da3559d-069f-4c25-b358-7ef38bf705bf","queryName":"measurefield","queryGroupId":"32befba1-8726-486c-96b9-416b22e3c199"},"tablecolumnmeasures":{"queryId":"a27305dd-3339-4161-83f1-6dc588e74ec6","queryName":"tablecolumnmeasures","queryGroupId":"94cf3fc6-5426-418b-af13-af4b2d4a191c","loadEnabled":true}},"document":"section Section1;\r\nshared scanResultID = let\n    Source = PowerBI.Dataflows(null),\n    // Enter Your Workspace ID as string here\n    workspaceID = \"0f70608e-fbc5-438c-b1eb-82c25fb89629\",\n    // Enter Your Dataflow ID as string here\n    dataflowID = \"bdb454e0-f63c-47c5-8f91-087ed0cb3e83\",\n    EnterworkspaceID = Source{[workspaceId = workspaceID]}[Data],\n    enterdataflowID = EnterworkspaceID{[dataflowId = dataflowID]}[Data],\n    scanResults1 = enterdataflowID{[entity = \"scanResults\"]}[Data],\n    #\"Filtered Rows\" = Table.SelectRows(scanResults1, each [Name] = \"id\"),\n    Value = #\"Filtered Rows\"{0}[Value]\nin\n    Value;\r\nshared client_id = \"fe78c0c5-78b7-4b26-b890-4ca1e149a074\" meta [IsParameterQuery=true, Type=\"Any\", IsParameterQueryRequired=true];\r\nshared client_secret = \"xtw8Q~.xSg7yvXMsmHADNwEZgnEezNi6YqTLwaBP\" meta [IsParameterQuery=true, Type=\"Any\", IsParameterQueryRequired=true];\r\nshared tenant_id = \"4510a959-aa93-4f35-a3f5-e2249f4d35f6\" meta [IsParameterQuery=true, Type=\"Any\", IsParameterQueryRequired=true];\r\nshared GetToken = let\n    Source = () =>\nlet\n    body = \"grant_type=client_credentials&resource=https://analysis.windows.net/powerbi/api&client_id=\"&client_id&\"&client_secret=\"&client_secret,\n    Data=Json.Document(Web.Contents(\"https://login.microsoftonline.com/\"&tenant_id&\"/oauth2/token\", [Headers=[#\"Content-Type\"=\"application/x-www-form-urlencoded\"], Content=Text.ToBinary(body)])),\n    access_token = Data[access_token]\nin\n    access_token\nin\n    Source;\r\nshared Result = let\n\n    Data = Json.Document(Web.Contents(\"https://api.powerbi.com/v1.0/myorg/\",\n    [\n        RelativePath= \"admin/workspaces/scanResult/\" & scanResultID,\n    \n    \n     \n\n       Headers=[Authorization=\"Bearer \" & GetToken()]\n    ]\n    ))\nin\n    Data;\r\nshared ws = let\n    Source = Result,\n    workspaces = Source[workspaces],\n    #\"Converted to Table\" = Table.FromList(workspaces, Splitter.SplitByNothing(), null, null, ExtraValues.Error),\n    #\"Expanded Column1\" = Table.ExpandRecordColumn(#\"Converted to Table\", \"Column1\", {\"id\", \"name\", \"type\", \"state\", \"isOnDedicatedCapacity\", \"capacityId\", \"reports\", \"dashboards\", \"datasets\", \"dataflows\", \"datamarts\", \"users\"}, {\"id\", \"name\", \"type\", \"state\", \"isOnDedicatedCapacity\", \"capacityId\", \"reports\", \"dashboards\", \"datasets\", \"dataflows\", \"datamarts\", \"users\"})\nin\n    #\"Expanded Column1\";\r\nshared datasourceinstancebr = let\n    Source = Result,\n    datasourceInstances = Source[datasourceInstances],\n    #\"Converted to Table\" = Table.FromList(datasourceInstances, Splitter.SplitByNothing(), null, null, ExtraValues.Error),\n    #\"Expanded Column1\" = Table.ExpandRecordColumn(#\"Converted to Table\", \"Column1\", {\"datasourceType\", \"connectionDetails\", \"datasourceId\", \"gatewayId\"}, {\"datasourceType\", \"connectionDetails\", \"datasourceId\", \"gatewayId\"}),\n    #\"Removed Columns\" = Table.RemoveColumns(#\"Expanded Column1\",{\"connectionDetails\"}),\n    #\"Removed Duplicates\" = Table.Distinct(#\"Removed Columns\", {\"datasourceId\"}),\n    #\"Changed Type\" = Table.TransformColumnTypes(#\"Removed Duplicates\",{{\"datasourceType\", type text}, {\"datasourceId\", type text}, {\"gatewayId\", type text}})\nin\n    #\"Changed Type\";\r\nshared workspaces = let\n    Source = ws,\n    #\"Removed Columns\" = Table.RemoveColumns(Source,{\"reports\", \"dashboards\", \"datasets\", \"dataflows\", \"datamarts\", \"users\"}),\n    #\"Changed Type\" = Table.TransformColumnTypes(#\"Removed Columns\",{{\"id\", type text}, {\"name\", type text}, {\"type\", type text}, {\"state\", type text}, {\"isOnDedicatedCapacity\", type logical}, {\"capacityId\", type text}})\nin\n    #\"Changed Type\";\r\nshared datasetsload = let\n    Source = ws,\n    #\"Removed Other Columns\" = Table.SelectColumns(Source,{\"id\", \"name\", \"datasets\"}),\n    #\"Expanded datasets\" = Table.ExpandListColumn(#\"Removed Other Columns\", \"datasets\"),\r\n  #\"Renamed columns\" = Table.RenameColumns(#\"Expanded datasets\", {{\"id\", \"workspaceid\"}, {\"name\", \"workspaceName\"}}),\n    #\"Expanded datasets1\" = Table.ExpandRecordColumn(#\"Renamed columns\", \"datasets\", {\"id\", \"name\", \"tables\", \"configuredBy\", \"configuredById\", \"isEffectiveIdentityRequired\", \"isEffectiveIdentityRolesRequired\", \"targetStorageMode\", \"createdDate\", \"contentProviderType\", \"datasourceUsages\", \"users\", \"misconfiguredDatasourceUsages\", \"upstreamDataflows\", \"description\", \"endorsementDetails\", \"schemaRetrievalError\", \"schemaMayNotBeUpToDate\"}, {\"id.1\", \"name.1\", \"tables\", \"configuredBy\", \"configuredById\", \"isEffectiveIdentityRequired\", \"isEffectiveIdentityRolesRequired\", \"targetStorageMode\", \"createdDate\", \"contentProviderType\", \"datasourceUsages\", \"users\", \"misconfiguredDatasourceUsages\", \"upstreamDataflows\", \"description\", \"endorsementDetails\", \"schemaRetrievalError\", \"schemaMayNotBeUpToDate\"}),\r\n  #\"Renamed columns 1\" = Table.RenameColumns(#\"Expanded datasets1\", {{\"id.1\", \"datasetid\"}, {\"name.1\", \"datasetName\"}}),\r\n  #\"Inserted merged column\" = Table.AddColumn(#\"Renamed columns 1\", \"WSIDDSID_ID\", each Text.Combine({Text.From([workspaceid]), Text.From([datasetid])}, \"_\"), type text)\nin\n    #\"Inserted merged column\";\r\nshared datasets = let\n    Source = datasetsload,\n    #\"Removed Columns\" = Table.RemoveColumns(Source,{\"tables\", \"datasourceUsages\", \"users\", \"misconfiguredDatasourceUsages\", \"upstreamDataflows\", \"endorsementDetails\"}),\n    #\"Changed Type\" = Table.TransformColumnTypes(#\"Removed Columns\", {{\"workspaceid\", type text}, {\"workspaceName\", type text}, {\"datasetid\", type text}, {\"datasetName\", type text}, {\"configuredBy\", type text}, {\"configuredById\", type text}, {\"isEffectiveIdentityRequired\", type logical}, {\"isEffectiveIdentityRolesRequired\", type logical}, {\"targetStorageMode\", type text}, {\"createdDate\", type datetime}, {\"contentProviderType\", type text}, {\"description\", type text}, {\"schemaRetrievalError\", type text}, {\"schemaMayNotBeUpToDate\", type text}}),\r\n  #\"Filtered rows\" = Table.SelectRows(#\"Changed Type\", each ([datasetid] <> null))\nin\n    #\"Filtered rows\";\r\nshared columnmeasures = let\r\n  Source = tableload,\n    #\"Expanded columns\" = Table.ExpandListColumn(Source, \"columns\"),\n    #\"Expanded columns1\" = Table.ExpandRecordColumn(#\"Expanded columns\", \"columns\", {\"name\", \"dataType\", \"isHidden\", \"columnType\"}, {\"columnName\", \"dataType\", \"isHiddenColumn\", \"columnType\"}),\n    #\"Expanded measures\" = Table.ExpandListColumn(#\"Expanded columns1\", \"measures\"),\n    #\"Expanded measures1\" = Table.ExpandRecordColumn(#\"Expanded measures\", \"measures\", {\"name\", \"expression\", \"isHidden\"}, {\"measureName\", \"expression\", \"isHiddenMeasure\"}),\n    #\"Expanded source\" = Table.ExpandListColumn(#\"Expanded measures1\", \"source\"),\n    #\"Expanded source1\" = Table.ExpandRecordColumn(#\"Expanded source\", \"source\", {\"expression\"}, {\"sourceExpression\"}),\r\n  #\"Changed column type\" = Table.TransformColumnTypes(#\"Expanded source1\", {{\"workspaceid\", type text}, {\"datasetid\", type text}, {\"tableName\", type text}, {\"columnName\", type text}, {\"dataType\", type text}, {\"isHiddenColumn\", type logical}, {\"columnType\", type text}, {\"measureName\", type text}, {\"expression\", type text}, {\"isHiddenMeasure\", type logical}, {\"isHiddenTable\", type logical}, {\"sourceExpression\", type text}, {\"WSIDDSID_ID\", type text}})\nin\n    #\"Changed column type\";\r\nshared datasetdatasource = let\n    Source = datasetsload,\n    #\"Removed Other Columns\" = Table.SelectColumns(Source, {\"datasetid\", \"datasourceUsages\", \"users\", \"misconfiguredDatasourceUsages\", \"upstreamDataflows\"}),\n    #\"Expanded datasourceUsages\" = Table.ExpandListColumn(#\"Removed Other Columns\", \"datasourceUsages\"),\n    #\"Expanded datasourceUsages1\" = Table.ExpandRecordColumn(#\"Expanded datasourceUsages\", \"datasourceUsages\", {\"datasourceInstanceId\"}, {\"datasourceInstanceId\"}),\n    #\"Removed Columns\" = Table.RemoveColumns(#\"Expanded datasourceUsages1\",{\"users\", \"upstreamDataflows\", \"misconfiguredDatasourceUsages\"}),\n    #\"Changed Type\" = Table.TransformColumnTypes(#\"Removed Columns\",{{\"datasetid\", type text}, {\"datasourceInstanceId\", type text}})\nin\n    #\"Changed Type\";\r\nshared datasetusers = let\n    Source = datasetsload,\n    #\"Removed Other Columns\" = Table.SelectColumns(Source, {\"workspaceid\", \"datasetid\", \"datasourceUsages\", \"users\", \"misconfiguredDatasourceUsages\", \"upstreamDataflows\", \"WSIDDSID_ID\"}),\n    #\"Removed Columns\" = Table.RemoveColumns(#\"Removed Other Columns\",{\"datasourceUsages\", \"upstreamDataflows\", \"misconfiguredDatasourceUsages\"}),\n    #\"Expanded users\" = Table.ExpandListColumn(#\"Removed Columns\", \"users\"),\n    #\"Expanded users1\" = Table.ExpandRecordColumn(#\"Expanded users\", \"users\", {\"datasetUserAccessRight\", \"emailAddress\", \"displayName\", \"identifier\", \"graphId\", \"principalType\", \"userType\"}, {\"datasetUserAccessRight\", \"emailAddress\", \"displayName\", \"identifier\", \"graphId\", \"principalType\", \"userType\"}),\r\n  #\"Changed column type\" = Table.TransformColumnTypes(#\"Expanded users1\", {{\"workspaceid\", type text}, {\"datasetid\", type text}, {\"datasetUserAccessRight\", type text}, {\"emailAddress\", type text}, {\"displayName\", type text}, {\"identifier\", type text}, {\"graphId\", type text}, {\"principalType\", type text}, {\"userType\", type text}, {\"WSIDDSID_ID\", type text}})\nin\n    #\"Changed column type\";\r\nshared reports = let\n    Source = ws,\n    #\"Removed Other Columns\" = Table.SelectColumns(Source, {\"id\", \"name\", \"isOnDedicatedCapacity\", \"capacityId\", \"reports\"}),\r\n  #\"Renamed columns\" = Table.RenameColumns(#\"Removed Other Columns\", {{\"id\", \"workspaceid\"}, {\"name\", \"workspaceName\"}}),\n    #\"Expanded reports\" = Table.ExpandListColumn(#\"Renamed columns\", \"reports\"),\n    #\"Expanded reports1\" = Table.ExpandRecordColumn(#\"Expanded reports\", \"reports\", {\"reportType\", \"id\", \"name\", \"datasetId\", \"createdDateTime\", \"modifiedDateTime\", \"modifiedBy\", \"createdBy\", \"modifiedById\", \"createdById\", \"users\", \"appId\", \"datasetWorkspaceId\"}, {\"reportType\", \"id.1\", \"name\", \"datasetId\", \"createdDateTime\", \"modifiedDateTime\", \"modifiedBy\", \"createdBy\", \"modifiedById\", \"createdById\", \"users\", \"appId\", \"datasetWorkspaceId\"}),\n    #\"Removed Columns\" = Table.RemoveColumns(#\"Expanded reports1\",{\"users\"}),\n    #\"Changed Type\" = Table.TransformColumnTypes(#\"Removed Columns\",{{\"reportType\", type text}, {\"workspaceid\", type text}, {\"workspaceName\", type text}, {\"datasetId\", type text}, {\"createdDateTime\", type datetime}, {\"modifiedDateTime\", type datetime}, {\"modifiedBy\", type text}, {\"createdBy\", type text}, {\"modifiedById\", type text}, {\"createdById\", type text}, {\"appId\", type text}, {\"datasetWorkspaceId\", type text}}),\r\n  #\"Renamed columns 1\" = Table.RenameColumns(#\"Changed Type\", {{\"id.1\", \"reportid\"}, {\"name\", \"reportName\"}}),\r\n  #\"Changed column type\" = Table.TransformColumnTypes(#\"Renamed columns 1\", {{\"workspaceid\", type text}, {\"workspaceName\", type text}, {\"isOnDedicatedCapacity\", type logical}, {\"capacityId\", type text}, {\"reportType\", type text}, {\"reportid\", type text}, {\"reportName\", type text}, {\"datasetId\", type text}, {\"createdDateTime\", type datetime}, {\"modifiedDateTime\", type datetime}, {\"modifiedBy\", type text}, {\"createdBy\", type text}, {\"modifiedById\", type text}, {\"createdById\", type text}, {\"appId\", type text}, {\"datasetWorkspaceId\", type text}}),\r\n  #\"Inserted merged column\" = Table.AddColumn(#\"Changed column type\", \"WSIDDSID_ID\", each Text.Combine({[workspaceid], [datasetId]}, \"_\"), type text)\nin\n    #\"Inserted merged column\";\r\nshared users = let\n    Source = ws,\n    #\"Removed Other Columns\" = Table.SelectColumns(Source,{\"id\", \"users\"}),\n    #\"Expanded users\" = Table.ExpandListColumn(#\"Removed Other Columns\", \"users\"),\n    #\"Expanded users1\" = Table.ExpandRecordColumn(#\"Expanded users\", \"users\", {\"groupUserAccessRight\", \"emailAddress\", \"displayName\", \"identifier\", \"graphId\", \"principalType\", \"userType\"}, {\"groupUserAccessRight\", \"emailAddress\", \"displayName\", \"identifier\", \"graphId\", \"principalType\", \"userType\"}),\n    #\"Changed Type\" = Table.TransformColumnTypes(#\"Expanded users1\",{{\"id\", type text}, {\"groupUserAccessRight\", type text}, {\"emailAddress\", type text}, {\"displayName\", type text}, {\"identifier\", type text}, {\"graphId\", type text}, {\"principalType\", type text}, {\"userType\", type text}})\nin\n    #\"Changed Type\";\r\nshared datasourceinst = let\n    Source = Result,\n    datasourceInstances = Source[datasourceInstances],\n    #\"Converted to Table\" = Table.FromList(datasourceInstances, Splitter.SplitByNothing(), null, null, ExtraValues.Error),\n    #\"Expanded Column1\" = Table.ExpandRecordColumn(#\"Converted to Table\", \"Column1\", {\"datasourceType\", \"connectionDetails\", \"datasourceId\", \"gatewayId\"}, {\"datasourceType\", \"connectionDetails\", \"datasourceId\", \"gatewayId\"}),\n    #\"Expanded connectionDetails\" = Table.ExpandRecordColumn(#\"Expanded Column1\", \"connectionDetails\", {\"sharePointSiteUrl\", \"server\", \"database\"}, {\"sharePointSiteUrl\", \"server\", \"database\"}),\n    #\"Changed Type\" = Table.TransformColumnTypes(#\"Expanded connectionDetails\",{{\"datasourceType\", type text}, {\"sharePointSiteUrl\", type text}, {\"server\", type text}, {\"database\", type text}, {\"datasourceId\", type text}, {\"gatewayId\", type text}})\nin\n    #\"Changed Type\";\r\nshared tableload = let\r\n  Source = datasetsload,\r\n  #\"Removed Other Columns\" = Table.SelectColumns(Source, {\"workspaceid\", \"datasetid\", \"tables\", \"WSIDDSID_ID\"}),\r\n  #\"Expanded tables\" = Table.ExpandListColumn(#\"Removed Other Columns\", \"tables\"),\r\n  #\"Expanded tables1\" = Table.ExpandRecordColumn(#\"Expanded tables\", \"tables\", {\"name\", \"columns\", \"measures\", \"isHidden\", \"source\"}, {\"tableName\", \"columns\", \"measures\", \"isHiddenTable\", \"source\"}),\r\n  #\"Inserted merged column\" = Table.AddColumn(#\"Expanded tables1\", \"tabledataset\", each Text.Combine({Text.From([datasetid]), Text.From([tableName])}, \"_\"), type text)\r\nin\r\n  #\"Inserted merged column\";\r\nshared tables = let\r\n  Source = tableload,\r\n  #\"Filtered rows\" = Table.SelectRows(Source, each ([tableName] <> null)),\r\n  #\"Removed columns\" = Table.RemoveColumns(#\"Filtered rows\", {\"columns\", \"measures\", \"isHiddenTable\"}),\r\n  #\"Expanded source\" = Table.ExpandListColumn(#\"Removed columns\", \"source\"),\r\n  #\"Expanded source 1\" = Table.ExpandRecordColumn(#\"Expanded source\", \"source\", {\"expression\"}, {\"expression\"}),\r\n  #\"Changed column type\" = Table.TransformColumnTypes(#\"Expanded source 1\", {{\"tableName\", type text}, {\"workspaceid\", type text}, {\"datasetid\", type text}, {\"WSIDDSID_ID\", type text}, {\"tabledataset\", type text}, {\"expression\", type text}})\r\nin\r\n  #\"Changed column type\";\r\nshared dataflowload = let\r\n  Source = ws,\r\n  #\"Choose columns\" = Table.SelectColumns(Source, {\"id\", \"dataflows\", \"users\"}),\r\n  #\"Renamed columns\" = Table.RenameColumns(#\"Choose columns\", {{\"id\", \"workspaceid\"}}),\r\n  #\"Expanded dataflows\" = Table.ExpandListColumn(#\"Renamed columns\", \"dataflows\"),\r\n  #\"Expanded dataflows 1\" = Table.ExpandRecordColumn(#\"Expanded dataflows\", \"dataflows\", {\"objectId\", \"name\", \"description\", \"configuredBy\", \"modifiedBy\", \"modifiedDateTime\", \"users\", \"datasourceUsages\"}, {\"objectId\", \"name\", \"description\", \"configuredBy\", \"modifiedBy\", \"modifiedDateTime\", \"users.1\", \"datasourceUsages\"}),\r\n  #\"Removed columns\" = Table.RemoveColumns(#\"Expanded dataflows 1\", {\"users\"}),\r\n  #\"Renamed columns 1\" = Table.RenameColumns(#\"Removed columns\", {{\"name\", \"dataflowName\"}}),\r\n  #\"Changed column type\" = Table.TransformColumnTypes(#\"Renamed columns 1\", {{\"workspaceid\", type text}, {\"objectId\", type text}, {\"dataflowName\", type text}, {\"description\", type text}, {\"configuredBy\", type text}, {\"modifiedBy\", type text}, {\"modifiedDateTime\", type datetime}, {\"users.1\", type any}, {\"datasourceUsages\", type any}}),\r\n  #\"Renamed columns 2\" = Table.RenameColumns(#\"Changed column type\", {{\"objectId\", \"dataflowid\"}})\r\nin\r\n  #\"Renamed columns 2\";\r\nshared dataflows = let\r\n  Source = dataflowload,\r\n  #\"Removed columns\" = Table.RemoveColumns(Source, {\"users.1\", \"datasourceUsages\"}),\r\n  #\"Filtered rows\" = Table.SelectRows(#\"Removed columns\", each ([dataflowid] <> null))\r\nin\r\n  #\"Filtered rows\";\r\nshared dataflowsources = let\r\n  Source = dataflowload,\r\n  #\"Removed other columns\" = Table.SelectColumns(Source, {\"workspaceid\", \"dataflowid\", \"datasourceUsages\"}),\r\n  #\"Expanded datasourceUsages\" = Table.ExpandListColumn(#\"Removed other columns\", \"datasourceUsages\"),\r\n  #\"Expanded datasourceUsages 1\" = Table.ExpandRecordColumn(#\"Expanded datasourceUsages\", \"datasourceUsages\", {\"datasourceInstanceId\"}, {\"datasourceInstanceId\"}),\r\n  #\"Changed column type\" = Table.TransformColumnTypes(#\"Expanded datasourceUsages 1\", {{\"datasourceInstanceId\", type text}}),\r\n  #\"Filtered rows\" = Table.SelectRows(#\"Changed column type\", each ([datasourceInstanceId] <> null))\r\nin\r\n  #\"Filtered rows\";\r\nshared datasourcedim = let\r\n  Data = Json.Document(Web.Contents(\"https://api.powerbi.com/v1.0/myorg/\",\n    [\n        RelativePath= \"admin/workspaces/scanResult/\" & scanResultID,\n    \n    \n     \n\n       Headers=[Authorization=\"Bearer \" & GetToken()]\n    ]\n    )),\r\n  Navigation = Data[datasourceInstances],\r\n  #\"Converted to table\" = Table.FromList(Navigation, Splitter.SplitByNothing(), null, null, ExtraValues.Error),\r\n  #\"Expanded Column1\" = Table.ExpandRecordColumn(#\"Converted to table\", \"Column1\", {\"datasourceType\", \"connectionDetails\", \"datasourceId\", \"gatewayId\"}, {\"datasourceType\", \"connectionDetails\", \"datasourceId\", \"gatewayId\"}),\r\n  #\"Expanded connectionDetails\" = Table.ExpandRecordColumn(#\"Expanded Column1\", \"connectionDetails\", {\"sharePointSiteUrl\", \"server\", \"database\"}, {\"sharePointSiteUrl\", \"server\", \"database\"}),\r\n  #\"Changed column type\" = Table.TransformColumnTypes(#\"Expanded connectionDetails\", {{\"datasourceType\", type text}, {\"sharePointSiteUrl\", type text}, {\"server\", type text}, {\"database\", type text}, {\"datasourceId\", type text}, {\"gatewayId\", type text}}),\r\n  #\"Inserted conditional column\" = Table.AddColumn(#\"Changed column type\", \"server_primary\", each if [server] = null then [sharePointSiteUrl] else [server]),\r\n  #\"Changed column type 1\" = Table.TransformColumnTypes(#\"Inserted conditional column\", {{\"datasourceType\", type text}, {\"sharePointSiteUrl\", type text}, {\"server\", type text}, {\"database\", type text}, {\"datasourceId\", type text}, {\"gatewayId\", type text}, {\"server_primary\", type text}})\r\nin\r\n  #\"Changed column type 1\";\r\nshared columns = let\n  Source = tableload,\n  #\"Removed columns\" = Table.RemoveColumns(Source, {\"datasetid\", \"workspaceid\", \"isHiddenTable\", \"WSIDDSID_ID\", \"measures\"}),\n  #\"Filtered rows\" = Table.SelectRows(#\"Removed columns\", each ([columns] <> null)),\n  #\"Expanded columns\" = Table.ExpandListColumn(#\"Filtered rows\", \"columns\"),\n  #\"Expanded columns 1\" = Table.ExpandRecordColumn(#\"Expanded columns\", \"columns\", {\"name\", \"dataType\", \"isHidden\", \"columnType\"}, {\"name\", \"dataType\", \"isHidden\", \"columnType\"}),\n  #\"Expanded source\" = Table.ExpandListColumn(#\"Expanded columns 1\", \"source\"),\n  #\"Expanded source 1\" = Table.ExpandRecordColumn(#\"Expanded source\", \"source\", {\"expression\"}, {\"expression\"}),\n  #\"Removed columns 1\" = Table.RemoveColumns(#\"Expanded source 1\", {\"expression\"}),\n  #\"Changed column type\" = Table.TransformColumnTypes(#\"Removed columns 1\", {{\"tableName\", type text}, {\"name\", type text}, {\"dataType\", type text}, {\"isHidden\", type logical}, {\"columnType\", type text}, {\"tabledataset\", type text}}),\n  AddT = Table.TransformColumnTypes(Table.AddColumn(#\"Changed column type\", \"Type\", each \"Column\"), {{\"Type\", type text}})\nin\nAddT;\r\nshared measurefield = let\r\n  Source = tableload,\r\n  #\"Removed columns\" = Table.RemoveColumns(Source, {\"datasetid\", \"workspaceid\", \"isHiddenTable\", \"WSIDDSID_ID\", \"columns\"}),\r\n  #\"Filtered rows\" = Table.SelectRows(#\"Removed columns\", each ([measures] <> null)),\r\n  #\"Expanded measures\" = Table.ExpandListColumn(#\"Filtered rows\", \"measures\"),\r\n  #\"Filtered rows 1\" = Table.SelectRows(#\"Expanded measures\", each ([measures] <> null)),\r\n  #\"Expanded measures 1\" = Table.ExpandRecordColumn(#\"Filtered rows 1\", \"measures\", {\"name\", \"expression\", \"isHidden\"}, {\"name\", \"expression\", \"isHidden\"}),\r\n  #\"Expanded source\" = Table.ExpandListColumn(#\"Expanded measures 1\", \"source\"),\r\n  #\"Removed columns 1\" = Table.RemoveColumns(#\"Expanded source\", {\"source\"}),\r\n  #\"Changed column type\" = Table.TransformColumnTypes(#\"Removed columns 1\", {{\"tableName\", type text}, {\"name\", type text}, {\"expression\", type text}, {\"isHidden\", type logical}, {\"tabledataset\", type text}}),\r\n  #\"Added custom\" = Table.TransformColumnTypes(Table.AddColumn(#\"Changed column type\", \"Type\", each \"Measure\"), {{\"Type\", type text}})\r\nin\r\n  #\"Added custom\";\r\nshared tablecolumnmeasures = let\r\n  Source = Table.Combine({measurefield, columns})\r\nin\r\n  Source;\r\n","connectionOverrides":[{"path":"PowerBI","kind":"PowerBI","provider":"CdsA","authenticationKind":null,"environmentName":null,"apiName":null,"connectionName":"{\"kind\":\"PowerBI\",\"path\":\"PowerBI\"}","audience":null},{"path":"https://api.powerbi.com/v1.0/myorg","kind":"Web","provider":"CdsA","authenticationKind":null,"environmentName":null,"apiName":null,"connectionName":"{\"kind\":\"Web\",\"path\":\"https://api.powerbi.com/v1.0/myorg\"}","audience":null},{"path":"https://login.microsoftonline.com/4510a959-aa93-4f35-a3f5-e2249f4d35f6/oauth2/token","kind":"Web","provider":"CdsA","authenticationKind":null,"environmentName":null,"apiName":null,"connectionName":"{\"kind\":\"Web\",\"path\":\"https://login.microsoftonline.com/4510a959-aa93-4f35-a3f5-e2249f4d35f6/oauth2/token\"}","audience":null}]},"annotations":[{"name":"pbi:QueryGroups","value":"[{\"id\":\"94cf3fc6-5426-418b-af13-af4b2d4a191c\",\"name\":\"Load\",\"description\":\"\",\"parentId\":null,\"order\":1},{\"id\":\"3f55dbbf-37df-4123-b6ec-da64aa6c5e89\",\"name\":\"BaseloadParameters\",\"description\":\"\",\"parentId\":null,\"order\":0},{\"id\":\"61368091-b3a0-4562-8b9b-939daf744724\",\"name\":\"Root\",\"description\":\"\",\"parentId\":null,\"order\":2},{\"id\":\"32befba1-8726-486c-96b9-416b22e3c199\",\"name\":\"subroot\",\"description\":\"\",\"parentId\":null,\"order\":3}]"}],"entities":[{"$type":"LocalEntity","name":"datasourceinstancebr","description":"","pbi:refreshPolicy":{"$type":"FullRefreshPolicy","location":"datasourceinstancebr.csv"},"attributes":[{"name":"datasourceType","dataType":"string"},{"name":"datasourceId","dataType":"string"},{"name":"gatewayId","dataType":"string"}],"partitions":[{"name":"FullRefreshPolicyPartition","refreshTime":"2022-12-02T14:22:20.540124+00:00","location":"https://wabieus2bpcdsa.blob.core.windows.net:443/6a79a5b7-c5f3-4a1a-bbcf-fa625a018808/datasourceinstancebr.csv?snapshot=2022-12-02T14%3A22%3A20.5248131Z"}]},{"$type":"LocalEntity","name":"workspaces","description":"","pbi:refreshPolicy":{"$type":"FullRefreshPolicy","location":"workspaces.csv"},"attributes":[{"name":"id","dataType":"string"},{"name":"name","dataType":"string"},{"name":"type","dataType":"string"},{"name":"state","dataType":"string"},{"name":"isOnDedicatedCapacity","dataType":"boolean"},{"name":"capacityId","dataType":"string"}],"partitions":[{"name":"FullRefreshPolicyPartition","refreshTime":"2022-12-02T14:22:20.6338087+00:00","location":"https://wabieus2bpcdsa.blob.core.windows.net:443/6a79a5b7-c5f3-4a1a-bbcf-fa625a018808/workspaces.csv?snapshot=2022-12-02T14%3A22%3A20.6027696Z"}]},{"$type":"LocalEntity","name":"datasets","description":"","pbi:refreshPolicy":{"$type":"FullRefreshPolicy","location":"datasets.csv"},"attributes":[{"name":"workspaceid","dataType":"string"},{"name":"workspaceName","dataType":"string"},{"name":"datasetid","dataType":"string"},{"name":"datasetName","dataType":"string"},{"name":"configuredBy","dataType":"string"},{"name":"configuredById","dataType":"string"},{"name":"isEffectiveIdentityRequired","dataType":"boolean"},{"name":"isEffectiveIdentityRolesRequired","dataType":"boolean"},{"name":"targetStorageMode","dataType":"string"},{"name":"createdDate","dataType":"dateTime"},{"name":"contentProviderType","dataType":"string"},{"name":"description","dataType":"string"},{"name":"schemaRetrievalError","dataType":"string"},{"name":"schemaMayNotBeUpToDate","dataType":"string"},{"name":"WSIDDSID_ID","dataType":"string"}],"partitions":[{"name":"FullRefreshPolicyPartition","refreshTime":"2022-12-02T14:22:21.1338404+00:00","location":"https://wabieus2bpcdsa.blob.core.windows.net:443/6a79a5b7-c5f3-4a1a-bbcf-fa625a018808/datasets.csv?snapshot=2022-12-02T14%3A22%3A21.1204768Z"}]},{"$type":"LocalEntity","name":"columnmeasures","description":"","pbi:refreshPolicy":{"$type":"FullRefreshPolicy","location":"columnmeasures.csv"},"attributes":[{"name":"workspaceid","dataType":"string"},{"name":"datasetid","dataType":"string"},{"name":"tableName","dataType":"string"},{"name":"columnName","dataType":"string"},{"name":"dataType","dataType":"string"},{"name":"isHiddenColumn","dataType":"boolean"},{"name":"columnType","dataType":"string"},{"name":"measureName","dataType":"string"},{"name":"expression","dataType":"string"},{"name":"isHiddenMeasure","dataType":"boolean"},{"name":"isHiddenTable","dataType":"boolean"},{"name":"sourceExpression","dataType":"string"},{"name":"WSIDDSID_ID","dataType":"string"},{"name":"tabledataset","dataType":"string"}],"partitions":[{"name":"FullRefreshPolicyPartition","refreshTime":"2022-12-02T14:22:25.0546382+00:00","location":"https://wabieus2bpcdsa.blob.core.windows.net:443/6a79a5b7-c5f3-4a1a-bbcf-fa625a018808/columnmeasures.csv?snapshot=2022-12-02T14%3A22%3A25.0302709Z"}]},{"$type":"LocalEntity","name":"datasetdatasource","description":"","pbi:refreshPolicy":{"$type":"FullRefreshPolicy","location":"datasetdatasource.csv"},"attributes":[{"name":"datasetid","dataType":"string"},{"name":"datasourceInstanceId","dataType":"string"}],"partitions":[{"name":"FullRefreshPolicyPartition","refreshTime":"2022-12-02T14:22:24.3514802+00:00","location":"https://wabieus2bpcdsa.blob.core.windows.net:443/6a79a5b7-c5f3-4a1a-bbcf-fa625a018808/datasetdatasource.csv?snapshot=2022-12-02T14%3A22%3A24.3066789Z"}]},{"$type":"LocalEntity","name":"datasetusers","description":"","pbi:refreshPolicy":{"$type":"FullRefreshPolicy","location":"datasetusers.csv"},"attributes":[{"name":"workspaceid","dataType":"string"},{"name":"datasetid","dataType":"string"},{"name":"datasetUserAccessRight","dataType":"string"},{"name":"emailAddress","dataType":"string"},{"name":"displayName","dataType":"string"},{"name":"identifier","dataType":"string"},{"name":"graphId","dataType":"string"},{"name":"principalType","dataType":"string"},{"name":"userType","dataType":"string"},{"name":"WSIDDSID_ID","dataType":"string"}],"partitions":[{"name":"FullRefreshPolicyPartition","refreshTime":"2022-12-02T14:22:24.320196+00:00","location":"https://wabieus2bpcdsa.blob.core.windows.net:443/6a79a5b7-c5f3-4a1a-bbcf-fa625a018808/datasetusers.csv?snapshot=2022-12-02T14%3A22%3A24.3056797Z"}]},{"$type":"LocalEntity","name":"reports","description":"","pbi:refreshPolicy":{"$type":"FullRefreshPolicy","location":"reports.csv"},"attributes":[{"name":"workspaceid","dataType":"string"},{"name":"workspaceName","dataType":"string"},{"name":"isOnDedicatedCapacity","dataType":"boolean"},{"name":"capacityId","dataType":"string"},{"name":"reportType","dataType":"string"},{"name":"reportid","dataType":"string"},{"name":"reportName","dataType":"string"},{"name":"datasetId","dataType":"string"},{"name":"createdDateTime","dataType":"dateTime"},{"name":"modifiedDateTime","dataType":"dateTime"},{"name":"modifiedBy","dataType":"string"},{"name":"createdBy","dataType":"string"},{"name":"modifiedById","dataType":"string"},{"name":"createdById","dataType":"string"},{"name":"appId","dataType":"string"},{"name":"datasetWorkspaceId","dataType":"string"},{"name":"WSIDDSID_ID","dataType":"string"}],"partitions":[{"name":"FullRefreshPolicyPartition","refreshTime":"2022-12-02T14:22:21.2900568+00:00","location":"https://wabieus2bpcdsa.blob.core.windows.net:443/6a79a5b7-c5f3-4a1a-bbcf-fa625a018808/reports.csv?snapshot=2022-12-02T14%3A22%3A21.2454070Z"}]},{"$type":"LocalEntity","name":"users","description":"","pbi:refreshPolicy":{"$type":"FullRefreshPolicy","location":"users.csv"},"attributes":[{"name":"id","dataType":"string"},{"name":"groupUserAccessRight","dataType":"string"},{"name":"emailAddress","dataType":"string"},{"name":"displayName","dataType":"string"},{"name":"identifier","dataType":"string"},{"name":"graphId","dataType":"string"},{"name":"principalType","dataType":"string"},{"name":"userType","dataType":"string"}],"partitions":[{"name":"FullRefreshPolicyPartition","refreshTime":"2022-12-02T14:22:20.946315+00:00","location":"https://wabieus2bpcdsa.blob.core.windows.net:443/6a79a5b7-c5f3-4a1a-bbcf-fa625a018808/users.csv?snapshot=2022-12-02T14%3A22%3A20.9255864Z"}]},{"$type":"LocalEntity","name":"datasourceinst","description":"","pbi:refreshPolicy":{"$type":"FullRefreshPolicy","location":"datasourceinst.csv"},"attributes":[{"name":"datasourceType","dataType":"string"},{"name":"sharePointSiteUrl","dataType":"string"},{"name":"server","dataType":"string"},{"name":"database","dataType":"string"},{"name":"datasourceId","dataType":"string"},{"name":"gatewayId","dataType":"string"}],"partitions":[{"name":"FullRefreshPolicyPartition","refreshTime":"2022-12-02T14:22:20.4932372+00:00","location":"https://wabieus2bpcdsa.blob.core.windows.net:443/6a79a5b7-c5f3-4a1a-bbcf-fa625a018808/datasourceinst.csv?snapshot=2022-12-02T14%3A22%3A20.4748423Z"}]},{"$type":"LocalEntity","name":"tables","description":"","pbi:refreshPolicy":{"$type":"FullRefreshPolicy","location":"tables.csv"},"attributes":[{"name":"workspaceid","dataType":"string"},{"name":"datasetid","dataType":"string"},{"name":"tableName","dataType":"string"},{"name":"expression","dataType":"string"},{"name":"WSIDDSID_ID","dataType":"string"},{"name":"tabledataset","dataType":"string"}],"partitions":[{"name":"FullRefreshPolicyPartition","refreshTime":"2022-12-02T14:22:20.4306843+00:00","location":"https://wabieus2bpcdsa.blob.core.windows.net:443/6a79a5b7-c5f3-4a1a-bbcf-fa625a018808/tables.csv?snapshot=2022-12-02T14%3A22%3A20.4108774Z"}]},{"$type":"LocalEntity","name":"dataflows","description":"","pbi:refreshPolicy":{"$type":"FullRefreshPolicy","location":"dataflows.csv"},"attributes":[{"name":"workspaceid","dataType":"string"},{"name":"dataflowid","dataType":"string"},{"name":"dataflowName","dataType":"string"},{"name":"description","dataType":"string"},{"name":"configuredBy","dataType":"string"},{"name":"modifiedBy","dataType":"string"},{"name":"modifiedDateTime","dataType":"dateTime"}],"partitions":[{"name":"FullRefreshPolicyPartition","refreshTime":"2022-12-02T14:22:21.4775646+00:00","location":"https://wabieus2bpcdsa.blob.core.windows.net:443/6a79a5b7-c5f3-4a1a-bbcf-fa625a018808/dataflows.csv?snapshot=2022-12-02T14%3A22%3A21.2613968Z"}]},{"$type":"LocalEntity","name":"dataflowsources","description":"","pbi:refreshPolicy":{"$type":"FullRefreshPolicy","location":"dataflowsources.csv"},"attributes":[{"name":"workspaceid","dataType":"string"},{"name":"dataflowid","dataType":"string"},{"name":"datasourceInstanceId","dataType":"string"}],"partitions":[{"name":"FullRefreshPolicyPartition","refreshTime":"2022-12-02T14:22:21.3838284+00:00","location":"https://wabieus2bpcdsa.blob.core.windows.net:443/6a79a5b7-c5f3-4a1a-bbcf-fa625a018808/dataflowsources.csv?snapshot=2022-12-02T14%3A22%3A21.3243617Z"}]},{"$type":"LocalEntity","name":"datasourcedim","description":"","pbi:refreshPolicy":{"$type":"FullRefreshPolicy","location":"datasourcedim.csv"},"attributes":[{"name":"datasourceType","dataType":"string"},{"name":"sharePointSiteUrl","dataType":"string"},{"name":"server","dataType":"string"},{"name":"database","dataType":"string"},{"name":"datasourceId","dataType":"string"},{"name":"gatewayId","dataType":"string"},{"name":"server_primary","dataType":"string"}],"partitions":[{"name":"FullRefreshPolicyPartition","refreshTime":"2022-12-02T14:22:21.102572+00:00","location":"https://wabieus2bpcdsa.blob.core.windows.net:443/6a79a5b7-c5f3-4a1a-bbcf-fa625a018808/datasourcedim.csv?snapshot=2022-12-02T14%3A22%3A21.0655096Z"}]},{"$type":"LocalEntity","name":"tablecolumnmeasures","description":"","pbi:refreshPolicy":{"$type":"FullRefreshPolicy","location":"tablecolumnmeasures.csv"},"attributes":[{"name":"tableName","dataType":"string"},{"name":"name","dataType":"string"},{"name":"expression","dataType":"string"},{"name":"isHidden","dataType":"boolean"},{"name":"tabledataset","dataType":"string"},{"name":"Type","dataType":"string"},{"name":"dataType","dataType":"string"},{"name":"columnType","dataType":"string"}],"partitions":[{"name":"FullRefreshPolicyPartition","refreshTime":"2022-12-02T14:22:20.8682143+00:00","location":"https://wabieus2bpcdsa.blob.core.windows.net:443/6a79a5b7-c5f3-4a1a-bbcf-fa625a018808/tablecolumnmeasures.csv?snapshot=2022-12-02T14%3A22%3A20.8466318Z"}]}]}